---
- name: Create automation eda instance
  kubernetes.core.k8s:
    host: "{{ __aap_ocp_install_auth_results['openshift_auth']['host'] }}"
    api_key: "{{ __aap_ocp_install_auth_results['openshift_auth']['api_key'] }}"
    validate_certs: "{{ aap_ocp_install_connection['validate_certs'] | default(omit) }}"
    state: present
    resource_definition: "{{ lookup('template', 'eda/instance.yaml.j2') | from_yaml }}"
    apply: true

- name: Wait for operator to create the automation eda route
  kubernetes.core.k8s_info:
    host: "{{ __aap_ocp_install_auth_results['openshift_auth']['host'] }}"
    api_key: "{{ __aap_ocp_install_auth_results['openshift_auth']['api_key'] }}"
    validate_certs: "{{ aap_ocp_install_connection['validate_certs'] | default(omit) }}"
    kind: Route
    name: "{{ aap_ocp_install_eda['instance_name'] | mandatory }}"
    api_version: route.openshift.io/v1
    namespace: "{{ aap_ocp_install_namespace | mandatory }}"
  register: __aap_ocp_install_eda_route_result
  until: __aap_ocp_install_eda_route_result['resources']
  retries: 60  # Wait for 15 minutes (60*15/60)
  delay: 15

- name: Store automation eda route
  ansible.builtin.set_fact:
    __aap_ocp_install_eda_route: "{{ __aap_ocp_install_eda_route_result['resources'][0]['status']['ingress'][0]['host'] }}"

- name: Ensure automation eda login is available
  ansible.builtin.uri:
    url: "https://{{ __aap_ocp_install_eda_route }}"
    validate_certs: "{{ aap_ocp_install_connection['validate_certs'] | default(omit) }}"
    method: GET
    status_code:
      - 200
  register: __aap_ocp_install_eda_available
  until: __aap_ocp_install_eda_available['status'] == 200
  retries: 120  # Wait for 30 minutes (120*15/60)
  delay: 15

- name: Create automation eda console link
  kubernetes.core.k8s:
    host: "{{ __aap_ocp_install_auth_results['openshift_auth']['host'] }}"
    api_key: "{{ __aap_ocp_install_auth_results['openshift_auth']['api_key'] }}"
    validate_certs: "{{ aap_ocp_install_connection['validate_certs'] | default(omit) }}"
    state: present
    resource_definition: "{{ lookup('template', 'eda/consolelink.yaml.j2') | from_yaml }}"
    apply: true
...
